
defun (: 'until-ceiling' ( param (: (: 'max' ( number ) ) (: 'the-seq' ( seq ) ) ) ) [
  seq [
    var (: 'elements' ( that the-seq each ) )
    loop [
      yield ( that max >= ( elements next else [ stop ] ) else [ stop ] )
    ]
  ]
] )

defun (: 'dividable' ( param (: (: 'n' ( number ) ) (: 'the-seq' ( seq ) ) ) ) [
  var (: 'elements' ( that the-seq each ) )
  loop [
    that n mod ( elements next else [ stop ] ) == 0 then [ return ( elements value ) ]
  ]
  none
] )

var (: 'primes-seq' (
  seq [
    var (: 'known-primes' ( list ( number ) ) )
    var (: 'i' 1 )
    loop [
      ( i += 1 .)
      ( dividable (: ( i ) ( until-ceiling (: ( i sqrt ) ( known-primes ) ) ) ) else [
        ( known-primes ( i ) .)
        ( yield ( i ) .)
      ] .)
    ]
  ]
) )

( console write ( until-ceiling (: 123 ( primes-seq ) ) ) newl .)

