
var (: 'fib-seq' (
  seq [
    var (: 'v0' 0 ) var (: 'v1' 1 ) var (: 'v2' 0 )
    loop [
      ( yield ( v2 clone ) .)
      ( v0 = ( v1 ) .)
      ( v1 = ( v2 ) .)
      ( v2 = ( v0 + ( v1 ) ) .)
    ]
  ]
) )

defun (: 'getn' ( param (: (: 'n' ( number ) ) (: 'the-seq' ( seq ) ) ) ) [
  seq [
    var (: 'i' 0 )
    var (: 'elements' ( that the-seq each ) )
    loop [
      ( that n >= ( i ++ ) else [ stop ] .)
      ( yield ( elements next else [ stop ] ).)
    ]
  ]
] )

defun (: 'ceiling' ( param (: (: 'max' ( number ) ) (: 'the-seq' ( seq ) ) ) ) [
  seq [
    var (: 'elements' ( that the-seq each ) )
    loop [
      that max > ( elements next else [ stop ] ) then [ yield ( elements value ) ]
    ]
  ]
] )

var (: 'first-100' ( getn (: 100 ( fib-seq ) ) ) )

( console write ( ceiling (: ( 2 pow 52 ) ( first-100 ) ) join ( ',' tab ) ) newl .)

