
use ( module 'modules/seq-utils.nom' )


var (: 'a1' 0 )
dep (: 'l22' [ 10 20 30 ] [ l22 ! ] )
dep (: 't1' [] [ [ 1 2 3 ] merge ( l22 ) ( a1 += 1 .) ] ) 

( t1 == [ 1 2 3 10 20 30 ] else [ error 'list t1 1' ] .)

( l22 12345 .)

( l22 == [ 10 20 30 12345 ] else [ error 'list l22' ] .)
( t1 == [ 1 2 3 10 20 30 12345 ] else [ error 'list t1 2' ] .)

( a1 == 2 else [ error 'a1' ] .)

var (: 'l' ( [ 10 1 [] ] clone each ) )

( l next == 10 else [ error 'l next 1' ] .)
( l next == 1 else [ error 'l next 2' ] .)
( l next == [] else [ error 'l next 3' ] .)


var (: 'a2' 0 )
( none else ( [ a2 = ] ( phrase ( [ 234 ] ( word '+' ) merge [ 1000 ] ) ) ) .)

( a2 == 1234 else [ error 'a2' ] .)


var (: 'a3' 1 )

var (: 'g1' ( seq (: ( number ) [
  dep (: 'd0' 1 [ d0 ! ] )
  var (: 'i' 10 )
  loop (
    [
      ( i -- == 0 then [ stop ] .)
    ]

    ( phrase ( []
      ( static (: 0 [ d0 * 1000 ( a3 += ( i ) .) ] ) )
      merge [ throw . ]
    ) )

    merge [
      ( i mod 3 == 0 then [ d0 ++ ] .)
      ( i throw .)
    ]
  )
] ) ) )

( g1 == [ 1000 9 2000 8 2000 7 2000 6 3000 5 3000 4 3000 3 4000 2 4000 1 ] else [ error 'g1' ] .)

( a3 == 28 else [ error 'a3' ] .)


( [ 1 2 3 ] = [ 4 5 6 ] == [ 4 5 6 ] else [ error 'list assign' ] .)


dep (: 'e1' 1 [ e1 ! ] )
dep (: 'e2' 2 [ e2 ! ] )

dep (: 'l1' [] [ [] ( e1 ) ( e2 ) ] )

dep (: 'l2' [ 10 20 30 ] [ l2 ! ] )

dep (: 'l3' [] [ [] merge ( l1 ) merge ( l2 ) ] )

( l3 == [ 1 2 10 20 30 ] else [ error 'list dep 1' ] .)

( e1 = 100 .)
( l3 == [ 100 2 10 20 30 ] else [ error 'list dep 2' ] .)

( l2 1111 .)
( l3 == [ 100 2 10 20 30 1111 ] else [ error 'list dep 3' ] .)


dep (: 'l4' [] [ sort ( l3 ) ] )

( l4 == [ 2 10 20 30 100 1111 ] else [ error 'l4 1' ] .)

( l2 merge [ -111 111 ] .)

( l4 == [ -111 2 10 20 30 100 111 1111 ] else [ error 'l4 2' ] .)

( e2 = 55 .)

( l4 == [ -111 10 20 30 55 100 111 1111 ] else [ error 'l4 3' ] .)

( l2 1 22 333 4444 .)

( l2 merge [ 100001 100002 100003 ] .)

( l4 == [ -111 1 10 20 22 30 55 100 111 333 1111 4444 100001 100002 100003 ] else [ error 'l4 3' ] .)

( e2 = 999999 .)

( l4 == [ -111 1 10 20 22 30 100 111 333 1111 4444 100001 100002 100003 999999 ] else [ error 'l4 4' ] .)

dep (: 'l5' [] [ sort ( l5 ) ] )

( l5 == [] else [ error 'l5 1' ] .)

( l5 7 3 .)
( l5 == [ 3 7 ] else [ error 'l5 2' ] .)

( l5 merge [ 5 9 ] .)
( l5 == [ 3 5 7 9 ] else [ error 'l5 3' ] .)

( l5 6 .)
( l5 == [ 3 5 6 7 9 ] else [ error 'l5 4' ] .)

